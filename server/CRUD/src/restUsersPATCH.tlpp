#include "tlpp-core.th"
#include "tlpp-rest.th"


/*------------------------------------------------------------------
Altera dados parciais de um usuário
Parâmetros via [raw body]
------------------------------------------------------------------*/
@Patch("sample/rest/crud/body")
function bodyPatchUser()

  local cID   := ''
  local cUser := ''
  local cName := ''
  local cNick := ''
  local jBody := ''

  jBody := JsonObject():new()
  jBody:fromJson( oRest:getBodyRequest() )

  if ( jBody <> Nil )
    cID   := jBody:GetJsonText("id"  )
    if ( cID == 'null' )
      cID := Nil
    endif
    cUser := jBody:GetJsonText("user")
    if ( cUser == 'null' )
      cUser := Nil
    endif
    cName := jBody:GetJsonText("name")
    cNick := jBody:GetJsonText("nick")
  endif

  processPatchUser( cID, cUser, cName, cNick )
return

/*------------------------------------------------------------------
Altera dados parciais de um usuário
Parâmetros via [query]
------------------------------------------------------------------*/
@Patch("sample/rest/crud/query")
function patchQueryUser()

  local cID     := ''
  local cUser   := ''
  local cName   := ''
  local cNick   := ''
  local jQuery  := jSonObject():New()

  jQuery := oRest:getQueryRequest()

  if ( jQuery <> Nil )
    cID   := jQuery[ 'id'   ]
    cUser := jQuery[ 'user' ]
    cName := jQuery[ 'name' ]
    cNick := jQuery[ 'nick' ]
  endif

  processPatchUser( cID, cUser, cName, cNick )
return

/*------------------------------------------------------------------
Altera dados parciais de um usuário
Parâmetros via [pathstring]
------------------------------------------------------------------*/
@Patch("sample/rest/crud/path/:user/:name/:nick")
function patchPathUser()

  local cID   := ''
  local cUser := ''
  local cName := ''
  local cNick := ''
  Local jPath := JsonObject():New()

  jPath := oRest:getPathParamsRequest()
  if ( jPath <> Nil )
    cID   := jPath[ 'id'   ]
    cUser := jPath[ 'user' ]
    cName := jPath[ 'name' ]
    cNick := jPath[ 'nick' ]
  endif

  processPatchUser( cID, cUser, cName, cNick )
return


// ------------------------------------------------------------------ //
// ------------------------------------------------------------------ //
static function processPatchUser( cID, cUser, cName, cNick )

  local cReturn   := ''
  local lOK       := .T.
  local cMsg      := ''

  // Valida campos chaves de busca
    if  (                                          ;
          ( cID   == Nil .or. empty(cID  ) ) .and. ;
          ( cUser == Nil .or. empty(cUser) )       ;
        )
    
      lOK     := .F.
      cMsg    := 'invalid parameter: id and user'
    
    else
      lOK     := .T.
      cMsg    := ''
    endif

  // Valida campos elegíveis para atualização
    if ( lOK )
      if ( cName == Nil )
        cName := ''
      endif
      if ( cNick == Nil )
        cNick := ''
      endif
      if ( empty(cName) .and. empty(cNick) )
        lOK   := .F.
        cMsg  := 'no data were reported for change'
      endif
    endif

  if ( lOK )
    if ( cID <> Nil .and. !empty(cID) )
      lOK := sampleCRUDtlppRestalteraUserByID( cID, '', cName, cNick )
    else
      lOK := sampleCRUDtlppRestalteraUserByUser( cUser, '', cName, cNick )
    endif
    if ( !lOK )
      cMsg := 'update not executed'
    else
      cMsg := "successfully update record"
    endif
  endif

  cReturn := '{ "SUCESS": "' + if(lOK,'yes','no') + '", "MESSAGE": "' + cMsg + '" }'

  oRest:setResponse( cReturn )
return
