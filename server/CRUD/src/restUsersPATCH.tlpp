#include "tlpp-core.th"
#include "tlpp-rest.th"


//-------------------------------------------------------------------
/*/{tlpp.doc} bodyPatchUser

@description
REST altera um usuário com paramêtros via [raw body]

@type    REST
@method  patch
@uri     /query/user

@author  TOTVS-TEC-TLPP
@since   06/2019
@version 1.0

@param	 object   , oRest  , Objeto contendo a classe de REST
@return  character, String em formato JSON com resposta ao Client
/*/
//-------------------------------------------------------------------
@Patch("sample/crud/patch/body/user")
user function bodyPatchUser()
    local cID   := ''
    local cUser := ''
    local cName := ''
    local cNick := ''
    local jBody := ''

    jBody := JsonObject():new()
    jBody:fromJson( oRest:getBodyRequest() )

    if ( jBody <> Nil )
        cID     := jBody:GetJsonText("id"  )
        cUser   := jBody:GetJsonText("user")
        cName   := jBody:GetJsonText("name")
        cNick   := jBody:GetJsonText("nick")
    endif
return processPatchUser(cID, cUser, cName, cNick)

//-------------------------------------------------------------------
/*/{tlpp.doc} pathPatchUser

@description
REST altera um usuário com parâmetros via [pathstring]

@type    REST
@method  patch
@uri     /path/user/:user/:name/:nick

@author  TOTVS-TEC-TLPP
@since   06/2019
@version 1.0

@param	 object   , oRest  , Objeto contendo dados REST

@return  character, String em formato JSON com resposta ao Client
/*/
//-------------------------------------------------------------------
@Patch("sample/crud/patch/path/user/:user/:name/:nick")
user function patchPathUser()
    local cID   := ''
    local cUser := ''
    local cName := ''
    local cNick := ''
    Local jPath := JsonObject():New()

    jPath := oRest:getPathParamsRequest()
    if (jPath <> Nil)
        cUser       := jPath[ 'user'   ]
        cName       := jPath[ 'name'   ]
        cNick       := jPath[ 'nick'   ]
    endif
return processPatchUser(cID, cUser, cName, cNick)

//-------------------------------------------------------------------
/*/{tlpp.doc} processPatchUser

@description
Função central chamada pelos modos diferentes de receber parâmetro do REST
e faz a chamada da função que de fato irá alterar um usuário na BD

@type    function

@author  TOTVS-TEC-TLPP
@since   06/2019
@version 1.0

@param	 object   , oRest     , Objeto contendo dados REST
@param	 character, cID       , ID
@param	 character, cUser     , Usuário do sistema
@param   character, cPass     , Senha do usuario
@param	 character, cName     , Nome
@param	 character, cNick     , Apelido

@return  character, String em formato JSON com resposta ao Client
/*/
//-------------------------------------------------------------------
static function processPatchUser(cID, cUser, cName, cNick)
    local creturn   := ''
    local lOK       := .T.
    local cMsg      := ''

    // Valida campos chaves de busca
        if  (                                            ;
                ( cID   == Nil .or. empty(cID  ) ) .and. ;
                ( cUser == Nil .or. empty(cUser) )       ;
            )
        
            lOK     := .F.
            cMsg    := 'invalid parameter: id and user'
        
        else
            lOK     := .T.
            cMsg    := ''
        endif

    // Valida campos elegíveis para atualização
        if ( lOK )
            if ( cName == Nil )
                cName := ''
            endif
            if ( cNick == Nil )
                cNick := ''
            endif
            if ( empty(cName) .and. empty(cNick) )
                lOK   := .F.
                cMsg  := 'no data were reported for change'
            endif
        endif

    if ( lOK )
        if ( cID <> Nil .and. !empty(cID) )
            lOK := sampleCRUDtlppRestalteraUserByID( cID, cName, cNick )
        else
            lOK := sampleCRUDtlppRestalteraUserByUser( cUser, cName, cNick )
        endif
        if ( !lOK )
            cMsg := 'update not executed'
        else
            cMsg := "successfully update record"
        endif
    endif

    creturn := '{ "SUCESS": "' + if(lOK,'yes','no') + '", "MESSAGE": "' + cMsg + '" }'

    if ( lOK )
        oRest:setResponse(200, cReturn)
    else
        oRest:setResponse(500, cReturn)
    endif
Return