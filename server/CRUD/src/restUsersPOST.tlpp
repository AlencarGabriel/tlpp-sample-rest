#include "tlpp-core.th"
#include "tlpp-rest.th"

/*------------------------------------------------------------------
Gera um usuário novo no BD
Parâmetros via [raw body]
------------------------------------------------------------------*/
@Post("sample/rest/crud/body")
function postBodyUser()

  local cUser := ''
  local cName := ''
  local cNick := ''
  local cPass := ''
  local jBody := ''

  jBody := JsonObject():new()
  jBody:fromJson( oRest:GetBodyRequest() )

  if ( jBody <> Nil )
    cUser := jBody:GetJsonText("user")
    cName := jBody:GetJsonText("name")
    cNick := jBody:GetJsonText("nick")
    cPass := jBody:GetjSontext("password")
  endif

  processPostUser( cUser, cPass, cName, cNick )
return

/*----------------------------------------------------------------
Gera um usuário novo no BD
Parâmetros via [querystring]
-----------------------------------------------------------------*/
@Post("sample/rest/crud/query")
function postQueryUser()

  local cUser   := ''
  local cPass   := ''
  local cName   := ''
  local cNick   := ''
  local jQuery  := jSonObject():New()

  jQuery := oRest:GetQueryRequest()

  if ( jQuery <> Nil )
    cUser := jQuery[ 'user'     ]
    cPass := jQuery[ 'password' ]
    cName := jQuery[ 'name'     ]
    cNick := jQuery[ 'nick'     ]
  endif

  processPostUser( cUser, cPass, cName, cNick )
return

/*----------------------------------------------------------------
Gera um usuário novo no BD
Parâmetros via [pathstring]
----------------------------------------------------------------*/
@Post("sample/rest/crud/path/:user/:password/:name/:nick")
function postPathUser()

  local cUser := ''
  local cPass := ''
  local cName := ''
  local cNick := ''
  local jPath := jSonObject():New()

  jPath := oRest:getPathParamsRequest()
  if ( jPath <> Nil )
    cUser := jPath[ 'user'      ]
    cPass := jPath[ 'password'  ]
    cName := jPath[ 'name'      ]
    cNick := jPath[ 'nick'      ]
  endif

  processPostUser( cUser, cPass, cName, cNick )
return 

/* ------------------------------------------------------------------
-------------------------------------------------------------------*/
static function processPostUser( cUser, cPass, cName, cNick )

  local cReturn := ''
  local lOK     := .T.
  local cMsg    := ''

  // Valida campo chave de busca
    if ( cUser == Nil .or. empty(cUser) )
      cUser := ''
      lOK   := .F.
      cMsg  := 'invalid parameter: user'
    endif
    if ( !lOK )
      if ( cPass == Nil .or. empty(cPass) )
        cPass := ''
        lOK   := .F.
        cMsg  += ' | password'
      else
        lOK   := .T.
        cMsg  := ''
      endif
    endif

  // Valida campos elegíveis para atualização
    if ( lOK )
      if ( cName == Nil )
        cName := ''
      endif
      if ( cNick == Nil )
        cNick := ''
      endif
    endif

  if ( lOK )
    if ( !(lOK := sampleCRUDtlppRestinsertUser( cUser, cPass, cName, cNick )) )
      cMsg := 'could not created new user'
    else
      cMsg := 'created new user'
    endif
  endif

  cReturn := '{ "SUCESS": "' + if(lOK,'yes','no') + '", "MESSAGE": "' + cMsg + '" }'

  oRest:setResponse( cReturn )
return
